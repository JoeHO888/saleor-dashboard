stages:
  - test
  - build
  - deploy

unit_test:
  stage: test
  image: node:16.20.2
  allow_failure: true  
  script:
    - npm install
    - npm run test

check_lock:
  stage: test
  image: node:16.20.2
  allow_failure: true  
  script:
    - npm install
    - npx lockfile-lint --path package-lock.json --allowed-hosts npm yarn

lint:
  stage: test
  image: node:16.20.2
  allow_failure: true  
  script:
    - npm install
    - npm run lint
    - git diff --exit-code ./src 

check_type:
  stage: test
  image: node:16.20.2
  allow_failure: true  
  script:
    - npm install
    - npm run check-types    

check_translation_message:
  stage: test
  image: node:16.20.2
  allow_failure: true  
  script:
    - npm install
    - npm run extract-messages
    - git diff --exit-code ./locale   

build:
  stage: build
  image: node:16.20.2
  script:
    - npm install
    - npm run build
  artifacts:
    paths:
      - build/dashboard/
    expire_in: 1 day    

deploy:
  stage: deploy
  image: valudio/docker-sshpass:latest
  when: manual
  script:
    - sshpass -p $PASS ssh user@$SERVER -t -o StrictHostKeychecking=no \
      env HD=/home/user/tmp \
      UN=user \
      HOST=api.domain.com \
      APIURI=graphql \
      VERSION=main \
      APP_HOST=dashboard.domain.com \
      APP_MOUNT_URI=app.domain.com \
      'bash -s' < deploy/deploy.sh

new_deploy:
  stage: deploy
  image: valudio/docker-sshpass:latest
  script:
    - ls -al build/
    - ls -al build/dashboard
